#pragma checksum "/home/phyphoestilic/Documents/C# Projects/AirportExplorer/Pages/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2a816b606484b63890ca4985e379f8e55e16a10a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AirportExplorer.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Index.cshtml", typeof(AirportExplorer.Pages.Pages_Index), null)]
namespace AirportExplorer.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/home/phyphoestilic/Documents/C# Projects/AirportExplorer/Pages/_ViewImports.cshtml"
using AirportExplorer;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2a816b606484b63890ca4985e379f8e55e16a10a", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3d58be633e602f15a9411e4a7935a1b721cfe380", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(26, 27, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            EndContext();
            BeginContext(53, 610, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2a816b606484b63890ca4985e379f8e55e16a10a3168", async() => {
                BeginContext(59, 597, true);
                WriteLiteral(@"
    <meta charset='utf-8' />
    <title>Airport Explorer</title>
    <meta name='viewport' content='intial-scale=1,maximum-scale=1,user-scalable=no' />
    <link href='https://api.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.css' rel='stylesheet' />
    <link href=""https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css"" rel=""stylesheet"">
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"">
    <style>
        body { margin:0; padding:0; }
        #map { position:absolute; top:0; bottom:0; width:100% }
    </style>

");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(663, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(665, 7729, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2a816b606484b63890ca4985e379f8e55e16a10a4933", async() => {
                BeginContext(671, 1729, true);
                WriteLiteral(@"
<div id='map'></div>

<div class=""absolute pin-t pin-r w-1/5 mt-4 mr-4"">
    <input type=""search"" id=""address-input"" placeholder=""Search...""/>
</div>

<div id=""info-card"" class=""absolute pin-t pin-l mt-4 ml-4 rounded shadow-lg bg-white"" style=""max-width: 400px; display: none;"">
    <div class=""overflow-hidden"" style=""height:200px;"">
        <span class=""absolute pin-t pin-r px-4 py-3"">
            <i id=""info-card-close-button"" class=""fa fa-times"" role=""button"" aria-hidden=""true""></i>
        </span>
        <img id=""airport-image"" src=""http://via.placeholder.com/400x200?text=Loading..."" />
    </div>
    <div class=""px-6 py-4"">
        <div id=""airport-name"" class=""font-bold text-l"">Airport Name goes here</div>
        
        <div id=""more-info"" class=""mt-8"">
            <div class=""flex mb-4"">
                <div class=""w-10""><i class=""fa fa-map-marker"" aria-hidden=""true""></i></div>
                <div id=""airport-address"" class=""font-medium text-l mb-2 w-full""></div>
            <");
                WriteLiteral(@"/div>

            <div class=""flex mb-4"">
                <div class=""w-10""><i class=""fa fa-phone"" aria-hidden=""true""></i></div>
                <div id=""airport-phone"" class=""font-medium text-l mb-2 w-full""></div>
            </div>

            <div class=""flex mb-4"">
                <div class=""w-10""><i class=""fa fa-link"" aria-hidden=""true""></i></div>
                <div id=""airport-website"" class=""font-medium text-l mb-2 w-full""></div>
            </div>
        </div>
    </div>
</div>

<script src='https://api.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.js'></script>
<script src=""https://cdn.jsdelivr.net/npm/places.js@1.4.15""></script>
<script>
    mapboxgl.accessToken = '");
                EndContext();
                BeginContext(2401, 23, false);
#line 58 "/home/phyphoestilic/Documents/C# Projects/AirportExplorer/Pages/Index.cshtml"
                       Write(Model.MapboxAccessToken);

#line default
#line hidden
                EndContext();
                BeginContext(2424, 134, true);
                WriteLiteral("\';\r\n    var map = new mapboxgl.Map({\r\n        container: \'map\', \r\n        style: \'mapbox://styles/mapbox/dark-v9\', \r\n        center: [");
                EndContext();
                BeginContext(2559, 22, false);
#line 62 "/home/phyphoestilic/Documents/C# Projects/AirportExplorer/Pages/Index.cshtml"
            Write(Model.InitialLongitude);

#line default
#line hidden
                EndContext();
                BeginContext(2581, 2, true);
                WriteLiteral(", ");
                EndContext();
                BeginContext(2584, 21, false);
#line 62 "/home/phyphoestilic/Documents/C# Projects/AirportExplorer/Pages/Index.cshtml"
                                     Write(Model.InitialLatitude);

#line default
#line hidden
                EndContext();
                BeginContext(2605, 50, true);
                WriteLiteral("], // starting position [lng, lat]\r\n        zoom: ");
                EndContext();
                BeginContext(2656, 17, false);
#line 63 "/home/phyphoestilic/Documents/C# Projects/AirportExplorer/Pages/Index.cshtml"
         Write(Model.InitialZoom);

#line default
#line hidden
                EndContext();
                BeginContext(2673, 5714, true);
                WriteLiteral(@" // starting zoom
    }); 

    var nav = new mapboxgl.NavigationControl();
    map.addControl(nav, 'bottom-right');

    map.on('load',
        () => {
            map.addSource(""airports"",
                {
                    type: ""geojson"",
                    data: ""?handler=airports"",
                    cluster: true, // Enable clustering
                    clusterRadius: 50, // Radius of each cluster when clustering points
                    clusterMaxZoom: 6 // Max zoom to cluster points on
                });

            map.addLayer({
                id: 'clusters',
                type: 'circle',
                source: 'airports',
                paint: {
                    'circle-color': {
                        property: 'point_count',
                        type: 'interval',
                        stops: [
                            [0, '#41A337'],
                            [100, '#2D7026'],
                            [750, '#0B5703'],
                ");
                WriteLiteral(@"        ]
                    },
                    'circle-radius': {
                        property: 'point_count',
                        type: 'interval',
                        stops: [
                            [0, 20],
                            [100, 30],
                            [750, 40]
                        ]
                    }
                }
            });
            map.addLayer({
                id: 'cluster-count',
                type: 'symbol',
                source: 'airports',
                filter: ['has', 'point_count'],
                layout: {
                    'text-field': '{point_count}',
                    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],
                    'text-size': 12
                }
            });

            map.addLayer({
                id: 'airport',
                type: 'circle',
                source: 'airports',
                filter: ['!has', 'point_count'],
                ");
                WriteLiteral(@"paint: {
                    'circle-color': '#1EF008',
                    'circle-radius': 6,
                    'circle-stroke-width': 1,
                    'circle-stroke-color': '#fff'
                }
            });

            var popup = new mapboxgl.Popup({
                closeButton: false,
                closeOnClick: true
            });

            map.on('mouseenter', 'airport', function(e) {
                // Chage the cursor style as a UI indicator.
                map.getCanvas().style.cursor = 'pointer';

                // Populate the popup and set its coordinates
                // based on the feature found.
                popup.setLngLat(e.features[0].geometry.coordinates)
                    .setHTML(e.features[0].properties.name)
                    .addTo(map);
            });

            map.on('mouseleave', 'airport', function() {
                map.getCanvas().style.cursor = '';
                popup.remove();
            });

            m");
                WriteLiteral(@"ap.on('click', 'airport', e => {
                var name = e.features[0].properties.name;
                var iataCode = e.features[0].properties.iataCode;
                var lat = e.features[0].geometry.coordinates[1];
                var lng = e.features[0].geometry.coordinates[0];
                // Display airport info
                document.querySelector('#airport-name').innerText = name + "" ("" + iataCode + "")"";
                document.querySelector('#airport-image').src = 'http://via.placeholder.com/400x200?text=Loading...';
                // Hide more info at first
                document.querySelector('#more-info').style.display = 'none';
                // Ensure the info box is visible
                document.querySelector('#info-card').style.display = '';
                fetch(`/?handler=airportdetail&name=${name}&latitude=${lat}&longitude=${lng}`)
                    .then(blob => blob.json())
                    .then(data => {
                        // Set airport propert");
                WriteLiteral(@"ies
                        if (data.photo)
                            document.querySelector('#airport-image').src = 'data:image/png;base64,' + data.photo;
                        else
                            document.querySelector('#airport-image').src =
                                'http://via.placeholder.com/400x200?text=No+Image+Found';
                        document.querySelector('#airport-address').innerText = data.formattedAddress || '-';
                        document.querySelector('#airport-phone').innerText = data.phoneNumber || '-';
                        document.querySelector('#airport-website').innerText = data.website || '-';
                        // display more info
                        document.querySelector('#more-info').style.display = '';
                    })
                    .catch(error => {
                        document.querySelector('#airport-image').src = 'http://via.placeholder.com/400x200?text=Error+while+loading+data';
                    }");
                WriteLiteral(@");
            });
        });

    
    var placesAutocomplete = places({
        container: document.querySelector('#address-input'),
        type: 'city'
    });
    
    placesAutocomplete.on('change', e => {
        map.flyTo({
            center: [ e.suggestion.latlng.lng, e.suggestion.latlng.lat],
            zoom: 9
        });
    });

    document.querySelector('#info-card-close-button').addEventListener('click', function(event) {
        document.querySelector('#info-card').style.display = 'none';
    });
</script> 
<!-- streets-v11 -->
<!-- dark-v9 -->
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8394, 830, true);
            WriteLiteral(@"
</html
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
